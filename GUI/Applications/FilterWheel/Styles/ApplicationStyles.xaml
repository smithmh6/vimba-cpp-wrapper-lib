<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:FilterWheel"
                    xmlns:shared="clr-namespace:FilterWheelShared.Controls;assembly=FilterWheelShared"
                    xmlns:telerik="http://schemas.telerik.com/2008/xaml/presentation"
                    xmlns:telerik1="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls"                
                    xmlns:helpers="clr-namespace:Telerik.Windows.Controls.Theming.Helpers;assembly=Telerik.Windows.Controls"  
                    xmlns:pluginHelper="clr-namespace:FilterWheel.Infrastructure"  
                    xmlns:mat="clr-namespace:Telerik.Windows.Controls.MaterialControls;assembly=Telerik.Windows.Controls">

    <!-- Make TextBox respond the "Enter" key-->
    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBox}}">
        <Style.Setters>
            <Setter Property="shared:InputBindingsManager.UpdatePropertySourceWhenEnterPressed" Value="TextBox.Text"/>
        </Style.Setters>
    </Style>

    <!-- Customized styles for WPF control here -->
    <Style TargetType="{x:Type TextElement }">
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <Style TargetType="{x:Type TextBlock }">
        <Setter Property="FontFamily" Value="Segoe UI"/>
    </Style>

    <Style x:Key="{x:Type Label}" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=MarkerBrush}" />
    </Style>

    <Style x:Key="{x:Type Border}" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{telerik:FluentResource ResourceKey=BasicBrush}"/>
    </Style>

    <Style x:Key="ThorlabsLine" TargetType="{x:Type Line}">
        <Setter Property="Stroke" Value="{telerik:FluentResource ResourceKey=BasicBrush}"/>
    </Style>

    <Style x:Key="RibbonStackPanel" TargetType="{x:Type StackPanel}">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Height" Value="32"/>        
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="BorderBrush" Value="{telerik:FluentResource ResourceKey=BasicBrush}"/>
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="HorizontalGridLinesBrush" Value="{telerik:FluentResource ResourceKey=BasicBrush}"/>
        <Setter Property="VerticalGridLinesBrush" Value="{telerik:FluentResource ResourceKey=BasicBrush}"/>
    </Style>

    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=MarkerBrush}" />
        <Setter Property="BorderBrush" Value="{telerik:FluentResource ResourceKey=BasicBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border BorderBrush="{telerik:FluentResource ResourceKey=BasicBrush}" BorderThickness="0,0,0,1" SnapsToDevicePixels="True" UseLayoutRounding="True">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=AlternativeBrush}" />
        <Setter Property="BorderBrush" Value="{telerik:FluentResource ResourceKey=BasicBrush}"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=PrimaryBackgroundBrush}" />
                <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=MarkerBrush}" />
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="{telerik:FluentResource ResourceKey=AccentBrush}" />
                <Setter Property="Foreground" Value="{telerik:FluentResource ResourceKey=PrimaryBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Customized styles for Telerik control in Fluent theme below -->

    <!-- RadRibbonButton-->
    <Style TargetType="{x:Type telerik:RadRibbonButton}" BasedOn="{StaticResource RadRibbonButtonStyle}">
        <Setter Property="Padding" Value="2" />
        <Setter Property="Size" Value="Small" />
        <Setter Property="Width" Value="32" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="pluginHelper:RibbonButtonHelper.SmallImageSize" Value="24"/>
        <Setter Property="ToolTip" Value="{Binding Path=Text, RelativeSource={RelativeSource Self}}"/>
    </Style>

    <!-- RadRibbonToggleButton-->
    <ControlTemplate x:Key="RadRibbonToggleButtonTemplate" TargetType="telerik:RadRibbonToggleButton">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="KeyboardNavigationStates">
                    <VisualState x:Name="KeyboardUnfocused"/>
                    <VisualState x:Name="KeyboardFocused">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="KeyboardNavigationVisual" Storyboard.TargetProperty="Opacity" To="1" Duration="0"/>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="BorderVisual"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    CornerRadius="{TemplateBinding CornerRadius}"/>
            <Border x:Name="KeyboardNavigationVisual"
                    Opacity="0"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    Background="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}"
                    BorderBrush="{telerik1:FluentResource ResourceKey=AccentFocusedBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"/>
            <mat:FluentControl CornerRadius="{TemplateBinding CornerRadius}" IsSmartClipped="True">
                <Grid x:Name="ContentGrid"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Image Name="Image" VerticalAlignment="Top" Margin="{TemplateBinding Padding}"/>
                    <StackPanel x:Name="FirstRowContainer" Grid.Row="1">
                        <ContentPresenter x:Name="ContentPresenter"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                RecognizesAccessKey="True"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                TextBlock.Foreground="{TemplateBinding Foreground}"/>
                        <!--<TextBlock Name="textRow1" Text="{TemplateBinding TextRow1}" TextAlignment="Center" Foreground="{TemplateBinding Foreground}"/>-->
                    </StackPanel>
                    <!--<TextBlock Name="textRow2" Grid.Row="2" VerticalAlignment="Center" Text="{TemplateBinding TextRow2}" TextAlignment="Center" Foreground="{TemplateBinding Foreground}"/>-->
                    <TextBlock Name="tR" Grid.Row="2" VerticalAlignment="Center" Text="{TemplateBinding Text}" TextAlignment="Center" FontSize="12" Foreground="{telerik:FluentResource ResourceKey=MarkerBrush}"/>
                </Grid>
            </mat:FluentControl>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <!--<Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=AccentMouseOverBrush}"/>-->
                <Setter Property="mat:MaterialAssist.MouseOverBrush" Value="{telerik1:FluentResource ResourceKey=BasicSolidBrush}"/>
                <Setter Property="mat:MaterialAssist.PressedBrush" Value="{telerik1:FluentResource ResourceKey=AccentPressedBrush}"/>
                <!--<Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>
                <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.CheckedBrush), Mode=OneWay}"/>-->
                <Setter TargetName="BorderVisual" Property="Background" Value="{telerik:FluentResource ResourceKey=BasicSolidBrush}"/>
                <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{telerik:FluentResource ResourceKey=BasicSolidBrush}"/>
                <Setter Property="Foreground" Value="{telerik1:FluentResource ResourceKey=MarkerInvertedBrush}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
                <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.MouseOverBrush), Mode=OneWay}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="BorderVisual" Property="Background" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
                <Setter TargetName="BorderVisual" Property="BorderBrush" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(mat:MaterialAssist.PressedBrush), Mode=OneWay}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Image" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}"/>
                <Setter TargetName="ContentPresenter" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}"/>
                <!--<Setter TargetName="textRow1" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}"/>
                <Setter TargetName="textRow2" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}"/>-->
                <Setter TargetName="tR" Property="Opacity" Value="{telerik1:FluentResource ResourceKey=DisabledOpacity}"/>
            </Trigger>
            <Trigger Property="CurrentSize" Value="Small">
                <Setter TargetName="Image" Property="Margin" Value="0"/>
            </Trigger>
            <Trigger Property="CurrentSize" Value="Medium">
                <Setter TargetName="Image" Property="Margin" Value="0"/>
            </Trigger>
            <Trigger Property="CurrentSize" Value="Large">
                <Setter Property="VerticalContentAlignment" Value="Stretch"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="CustomRadRibbonToggleButtonStyle" TargetType="{x:Type telerik:RadRibbonToggleButton}" BasedOn="{StaticResource RadRibbonToggleButtonStyle}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Size" Value="Small" />
        <Setter Property="Width" Value="60" />
        <Setter Property="MinWidth" Value="32" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="pluginHelper:RibbonButtonHelper.SmallImageSize" Value="24"/>
        <Setter Property="ToolTip" Value="{Binding Path=Text, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template" Value="{StaticResource RadRibbonToggleButtonTemplate}"/>
    </Style>


    <!-- RadWindow -->
    <ControlTemplate x:Key="ThorlabsRadWindowTemplate" TargetType="telerik:RadWindow">
        <Grid x:Name="LayoutRoot" Margin="0">
            <Border x:Name="WindowOuterBorder"
                    Grid.RowSpan="2"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}">
                <AdornerDecorator>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" MinHeight="30"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="Header">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="IconContent"
                                            Grid.Column="0"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Margin="5,0,0,0"
                                            Content="{TemplateBinding Icon}"
                                            ContentTemplate="{TemplateBinding IconTemplate}"/>
                                    <ContentControl x:Name="HeaderContent"
                                            Grid.Column="1"
                                            Foreground="{TemplateBinding Foreground}"
                                            Margin="10 0"
                                            IsTabStop="False"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Center"
                                            HorizontalContentAlignment="Stretch"
                                            Content="{TemplateBinding Header}"
                                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                                            SnapsToDevicePixels="True"
                                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontFamily="{TemplateBinding FontFamily}"/>
                                </Grid>
                                <Border x:Name="PART_HeaderButtonsBorder" Grid.Column="1">
                                    <StackPanel x:Name="HeaderButtons" Orientation="Horizontal">
                                        <telerik:RadButton x:Name="PART_MinimizeButton"
                                                Command="{x:Static telerik:WindowCommands.Minimize}"
                                                Style="{StaticResource WindowButtonStyle}"
                                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <ToolTipService.ToolTip>
                                                <ToolTip telerik:LocalizationManager.ResourceKey="Minimize" telerik:StyleManager.Theme="Fluent"/>
                                            </ToolTipService.ToolTip>
                                            <telerik:RadGlyph
                                                    FontSize="16"
                                                    Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type telerik:RadButton}}}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center"
                                                    Glyph="{StaticResource GlyphMinimize}"/>
                                        </telerik:RadButton>
                                        <telerik:RadButton x:Name="PART_RestoreButton"
                                                Command="{x:Static telerik:WindowCommands.Restore}"
                                                Style="{StaticResource WindowButtonStyle}"
                                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <ToolTipService.ToolTip>
                                                <ToolTip telerik:LocalizationManager.ResourceKey="Restore" telerik:StyleManager.Theme="Fluent"/>
                                            </ToolTipService.ToolTip>
                                            <telerik:RadGlyph
                                                    FontSize="16"
                                                    Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type telerik:RadButton}}}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center"
                                                    Glyph="{StaticResource GlyphWindowCollapse}"/>
                                        </telerik:RadButton>
                                        <telerik:RadButton x:Name="PART_MaximizeButton"
                                                Command="{x:Static telerik:WindowCommands.Maximize}"
                                                Style="{StaticResource WindowButtonStyle}"
                                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <ToolTipService.ToolTip>
                                                <ToolTip telerik:LocalizationManager.ResourceKey="Maximize" telerik:StyleManager.Theme="Fluent"/>
                                            </ToolTipService.ToolTip>
                                            <telerik:RadGlyph
                                                    FontSize="16"
                                                    Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type telerik:RadButton}}}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center"
                                                    Glyph="{StaticResource GlyphWindow}"/>
                                        </telerik:RadButton>
                                        <telerik:RadButton x:Name="PART_CloseButton"
                                                Command="{x:Static telerik:WindowCommands.Close}"
                                                Style="{StaticResource WindowCloseButtonStyle}"
                                                Visibility="{Binding IsEnabled, RelativeSource={RelativeSource Self}, Converter={StaticResource BooleanToVisibilityConverter}}">
                                            <ToolTipService.ToolTip>
                                                <ToolTip telerik:LocalizationManager.ResourceKey="Close" telerik:StyleManager.Theme="Fluent"/>
                                            </ToolTipService.ToolTip>
                                            <telerik:RadGlyph
                                                    FontSize="16"
                                                    Foreground="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type telerik:RadButton}}}"
                                                    VerticalAlignment="Center"
                                                    HorizontalAlignment="Center"
                                                    Glyph="{StaticResource GlyphClose}"/>
                                        </telerik:RadButton>
                                    </StackPanel>
                                </Border>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="ContentElement" Grid.Row="1" Margin="{TemplateBinding Padding}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                </AdornerDecorator>
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="WindowState" Value="Maximized">
                <Setter TargetName="WindowOuterBorder" Property="BorderThickness" Value="0"/>
            </Trigger>
            <Trigger Property="WindowState" Value="Minimized">
                <Setter TargetName="LayoutRoot" Property="HorizontalAlignment" Value="Left"/>
                <Setter TargetName="LayoutRoot" Property="VerticalAlignment" Value="Top"/>
                <Setter TargetName="PART_MinimizeButton" Property="Width" Value="30"/>
                <Setter TargetName="PART_RestoreButton" Property="Width" Value="30"/>
                <Setter TargetName="PART_MaximizeButton" Property="Width" Value="30"/>
                <Setter TargetName="PART_CloseButton" Property="Width" Value="30"/>
                <Setter TargetName="PART_MinimizeButton" Property="Height" Value="30"/>
                <Setter TargetName="PART_RestoreButton" Property="Height" Value="30"/>
                <Setter TargetName="PART_MaximizeButton" Property="Height" Value="30"/>
                <Setter TargetName="PART_CloseButton" Property="Height" Value="30"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Content" SourceName="IconContent" Value="{x:Null}"/>
                    <Condition Property="ContentTemplate" SourceName="IconContent" Value="{x:Null}"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="IconContent" Property="Visibility" Value="Collapsed"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsActiveWindow" Value="True"/>
                    <Condition Property="mat:ThemeEffectsHelper.IsAcrylic" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" TargetName="WindowOuterBorder" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=BorderBackground}"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="RadWindowStyle" TargetType="{x:Type telerik:RadWindow}" BasedOn="{StaticResource RadWindowStyle}">
        <Setter Property="Template" Value="{StaticResource ThorlabsRadWindowTemplate}"/>
        <Setter Property="mat:ThemeEffectsHelper.IsAcrylic" Value="False"/>
    </Style>

    <!-- RadMenu -->
    <Style TargetType="telerik:RadMenu" BasedOn="{StaticResource RadMenuStyle}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="telerik:WindowHost.HitTestable" Value="true" />
        <Setter Property="IsMainMenu" Value="true" />
    </Style>
</ResourceDictionary>